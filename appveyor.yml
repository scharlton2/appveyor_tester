version: '{branch}-{build}'

environment:
  iric_access_token:
    secure: TODO_TODO
  scharlton2_access_token:
    secure: 3mXPZnI89IUSgBnFS4uVNiz69PVY7KG4jw+wPTj0ubg9iAjjw9oKacWVZvoxulyy


# Skipping commits affecting specific files (GitHub only).
# also can use [skip appveyor] in message to skip building
skip_commits:
  files:
    - README.md

image:
  - Visual Studio 2019

init:
  - ps: |
      # Sometimes the plaintext of secure variables is displayed so filter out secure vars
      Get-ChildItem env: | Where-Object { $_.Name -NotMatch "access_token" -and $_.Name -notmatch 'json'}

before_build:
  - ps: |
      $CommitAndPush = $true
      $branch = $true

      if ($branch) {
        # create branch
        git switch --quiet -c "__$env:APPVEYOR_BUILD_VERSION"
        if ($LastExitCode -ne 0) { $host.SetShouldExit($LastExitCode) }
      }

      # Make changes
      Get-Date -Format o | Out-File .\README.md -Encoding utf8 -Append

      ####################################################################################
      # Commit the languages changes
      # from https://www.appveyor.com/docs/how-to/git-push/
      ####################################################################################
      if ($CommitAndPush) {
        $access_token = $env:scharlton2_access_token

        # Enabling Git credential store
        git config --global credential.helper store
        if ($LastExitCode -ne 0) { $host.SetShouldExit($LastExitCode) }

        # Adding access token to credential store
        Add-Content "$HOME\.git-credentials" "https://$($access_token):x-oauth-basic@github.com`n" -ErrorAction Stop

        # Indicate git user name and mail
        git config --global user.email "iric.appveyor@gmail.com"
        git config --global user.name "iric.appveyor"
        git config --global core.safecrlf false
        if ($LastExitCode -ne 0) { $host.SetShouldExit($LastExitCode) }

        # add and commit language files (shouldn't be any new files)
        git commit -am "translate_ts.py by iric.appveyor $env:APPVEYOR_REPO_NAME:$env:APPVEYOR_BUILD_VERSION"
        if ($LastExitCode -ne 0) { $host.SetShouldExit($LastExitCode) }

        # push
        if ($branch) {
          git push --set-upstream origin "__$env:APPVEYOR_BUILD_VERSION" 2>&1 | Out-Null
        } else {
          git push --set-upstream origin $env:APPVEYOR_REPO_BRANCH 2>&1 | Out-Null
        }
        if ($LastExitCode -ne 0) { $host.SetShouldExit($LastExitCode) }
        echo "Needed to avoid error from git push"
      }

build_script:
  - echo Done
